{
	"info": {
		"_postman_id": "ae191d90-d746-4437-bab9-03cec02dd2e2",
		"name": "inventory",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47123934",
		"_collection_link": "https://navigation-astronaut-49369413-3695328.postman.co/workspace/e2c9e71f-1277-482b-8c94-052aed05a077/collection/47123934-ae191d90-d746-4437-bab9-03cec02dd2e2?action=share&source=collection_link&creator=47123934"
	},
	"item": [
		{
			"name": "register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"jeya surya\",\n  \"password\": \"12345678\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test (\"status code needs to be 200\", function(){",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"jeya surya\",\n  \"password\": \"12345678\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/login",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "created the db of my products",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"name\": \"Apple\",\n    \"description\": \"Fresh red apples\",\n    \"price\": 2.99,\n    \"stock\": 100,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Banana\",\n    \"description\": \"Fresh yellow bananas\",\n    \"price\": 1.99,\n    \"stock\": 200,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Carrot\",\n    \"description\": \"Organic orange carrots\",\n    \"price\": 1.49,\n    \"stock\": 150,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Broccoli\",\n    \"description\": \"Fresh green broccoli\",\n    \"price\": 2.49,\n    \"stock\": 180,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Grapes\",\n    \"description\": \"Sweet and fresh grapes\",\n    \"price\": 3.99,\n    \"stock\": 120,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Spinach\",\n    \"description\": \"Fresh spinach leaves\",\n    \"price\": 1.79,\n    \"stock\": 130,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Orange\",\n    \"description\": \"Fresh juicy oranges\",\n    \"price\": 2.49,\n    \"stock\": 250,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Cucumber\",\n    \"description\": \"Crunchy green cucumbers\",\n    \"price\": 1.99,\n    \"stock\": 140,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Potato\",\n    \"description\": \"Fresh brown potatoes\",\n    \"price\": 1.29,\n    \"stock\": 200,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Tomato\",\n    \"description\": \"Ripe red tomatoes\",\n    \"price\": 2.59,\n    \"stock\": 180,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Strawberry\",\n    \"description\": \"Sweet red strawberries\",\n    \"price\": 4.99,\n    \"stock\": 100,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Lettuce\",\n    \"description\": \"Fresh crisp lettuce\",\n    \"price\": 1.89,\n    \"stock\": 160,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Mango\",\n    \"description\": \"Tropical sweet mangoes\",\n    \"price\": 3.49,\n    \"stock\": 120,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Zucchini\",\n    \"description\": \"Fresh green zucchini\",\n    \"price\": 1.59,\n    \"stock\": 110,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Peach\",\n    \"description\": \"Juicy sweet peaches\",\n    \"price\": 3.79,\n    \"stock\": 80,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Cauliflower\",\n    \"description\": \"Fresh white cauliflower\",\n    \"price\": 2.99,\n    \"stock\": 120,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Pineapple\",\n    \"description\": \"Tropical pineapple\",\n    \"price\": 5.99,\n    \"stock\": 60,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Asparagus\",\n    \"description\": \"Fresh green asparagus\",\n    \"price\": 4.49,\n    \"stock\": 90,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Plum\",\n    \"description\": \"Sweet red plums\",\n    \"price\": 2.79,\n    \"stock\": 150,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Bell Pepper\",\n    \"description\": \"Fresh bell peppers (red, green, yellow)\",\n    \"price\": 2.29,\n    \"stock\": 200,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Watermelon\",\n    \"description\": \"Large, juicy watermelon\",\n    \"price\": 6.99,\n    \"stock\": 50,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Eggplant\",\n    \"description\": \"Fresh purple eggplants\",\n    \"price\": 3.19,\n    \"stock\": 100,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Lemon\",\n    \"description\": \"Fresh lemons\",\n    \"price\": 1.89,\n    \"stock\": 180,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Sweet Potato\",\n    \"description\": \"Fresh orange sweet potatoes\",\n    \"price\": 2.49,\n    \"stock\": 150,\n    \"category\": \"Vegetable\"\n  },\n  {\n    \"name\": \"Cantaloupe\",\n    \"description\": \"Sweet and juicy cantaloupe\",\n    \"price\": 4.99,\n    \"stock\": 75,\n    \"category\": \"Fruit\"\n  },\n  {\n    \"name\": \"Green Beans\",\n    \"description\": \"Fresh green beans\",\n    \"price\": 2.99,\n    \"stock\": 140,\n    \"category\": \"Vegetable\"\n  }\n]\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/products?Authorization={{tokenid}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"products"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "{{tokenid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all data in db",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/products",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"products"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get with id",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenid}}",
						"type": "text"
					},
					{
						"key": "id",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/products/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						"{{id}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "modify the stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"stock\": 100,\n  \"price\": 3.10\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/products/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status needs to be 200\",function(){",
							"    pm.response.to.be.have.status(200)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/products/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/products/abc123",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						"abc123"
					]
				}
			},
			"response": []
		},
		{
			"name": "missing feilds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"orange\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/products/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the status needs to be 403\",function(){",
							"    pm.response.to.have.status(403);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "trtjrtjtrsjtrjrj",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/products/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "status aut testing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is within 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Products list is not empty\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/products/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "add a product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code must be 201\", function(){",
							"    pm.response.to.be.have.status(201)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"name\": \"gauva\",\n    \"description\": \"Fresh green gauva\",\n    \"price\": 2.99,\n    \"stock\": 100,\n    \"category\": \"Fruit\"\n },\n {\n    \"name\": \"muskmelon\",\n    \"description\": \"goood for skin\",\n    \"price\": 30,\n    \"stock\": 1000,\n    \"category\": \"Fruit\"\n\n }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/products/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}